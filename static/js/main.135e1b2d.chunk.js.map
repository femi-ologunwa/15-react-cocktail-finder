{"version":3,"sources":["logo.svg","context.js","components/Loading.js","components/Cocktail.js","components/CocktailList.js","components/SearchForm.js","pages/Home.js","pages/About.js","pages/SingleCocktail.js","pages/Error.js","components/Navbar.js","App.js","index.js"],"names":["module","exports","url","AppContext","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","useCallback","a","fetch","response","console","log","json","data","drinks","newCocktails","map","drink","id","idDrink","name","strDrink","img","strDrinkThumb","info","strAlcoholic","glass","strGlass","useEffect","Provider","value","Loading","className","Cocktail","src","alt","to","CocktailList","useContext","length","cocktail","key","SearchForm","searchValue","useRef","current","focus","onSubmit","e","preventDefault","htmlFor","type","ref","onChange","Home","About","SingleCocktail","useParams","setCocktail","image","category","strCategory","instructions","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","getCocktail","ingredient","index","Error","Navbar","logo","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.135e1b2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9a3d2645.svg\";","import React, { createContext, useState, useEffect, useCallback } from 'react';\n\n//url to fetch from\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\n//initiale/create a context\nconst AppContext = createContext();\n\n//create a context provider component\nconst AppProvider = ({ children }) => {\n   const [loading, setLoading] = useState(true);\n   const [searchTerm, setSearchTerm] = useState('a'); //displays cocktails with name starting with 'a' when the component mounts\n   const [cocktails, setCocktails] = useState([]);\n\n   //function to fetch drinks from api\n   const fetchDrinks = useCallback(async () => {\n      setLoading(true);\n      try {\n         const response = await fetch(`${url}${searchTerm}`);\n         console.log(`${url}${searchTerm}`);\n         const data = await response.json();\n         //console.log(data);\n\n         const { drinks } = data;\n\n         if (drinks) {\n            //drinks matching search term returned\n            //console.log(drinks);\n            const newCocktails = drinks.map((drink) => {\n               const {\n                  idDrink,\n                  strDrink,\n                  strDrinkThumb,\n                  strAlcoholic,\n                  strGlass,\n               } = drink;\n\n               return {\n                  id: idDrink,\n                  name: strDrink,\n                  img: strDrinkThumb,\n                  info: strAlcoholic,\n                  glass: strGlass,\n               };\n            });\n            setCocktails(newCocktails);\n         } else {\n            //no drinks matching the search term\n            setCocktails([]);\n         }\n         setLoading(false);\n      } catch (error) {\n         console.log(error);\n         setLoading(false);\n      }\n   }, [searchTerm]);\n\n   //always fetch drinks from api when the search term changes\n   useEffect(() => {\n      fetchDrinks();\n   }, [searchTerm, fetchDrinks]);\n\n   return (\n      <AppContext.Provider value={{ loading, cocktails, setSearchTerm }}>\n         {children}\n      </AppContext.Provider>\n   );\n};\n\nexport { AppContext, AppProvider };\n\n/*\nWe are supposed to add fetchDrinks as part of the dependency in the useEffect above, but if we do, we will have an infinite loop because of the way the code of the fetchDrinks function is set up. \n\nA way to solve this problem is by using useCallback hook which in this case will make the fetchDrinks() to be created again from the scratch only if searchTerm changes; if searchTerm does not change, the fetchDrinks() is not created from scratch in which case, we can add it as part of the dependency list in useEffect\n\n\n*/\n","import React from 'react'\n\nconst Loading = () => {\n return (\n  <div className=\"loader\">\n  </div>\n )\n}\n\nexport default Loading\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Cocktail = ({ img, name, id, info, glass }) => {\n   return (\n      <article className='cocktail'>\n         <div className='img-container'>\n            <img src={img} alt={name} />\n         </div>\n         <div className='cocktail-footer'>\n            <h3>{name}</h3>\n            <h4>{glass}</h4>\n            <p>{info}</p>\n            <Link\n               to={`/cocktail/${id}`}\n               className='btn btn-primary btn-details'\n            >\n               details\n            </Link>\n         </div>\n      </article>\n   );\n};\n\nexport default Cocktail;\n","import React, { useContext } from 'react';\nimport { AppContext } from '../context';\nimport Loading from './Loading';\nimport Cocktail from './Cocktail';\n\nconst CocktailList = () => {\n   const { cocktails, loading } = useContext(AppContext);\n   console.log(cocktails);\n\n   if (loading) {\n      return <Loading />;\n   }\n\n   if (cocktails.length < 1) {\n      return (\n         <h2 className='section-title'>\n            no cocktails matched your search criteria\n         </h2>\n      );\n   }\n\n   return (\n      <section className='section'>\n         <h2 className='section-title'>cocktails</h2>\n         <div className='cocktails-center'>\n            {cocktails.map((cocktail) => {\n               return <Cocktail key={cocktail.id} {...cocktail} />;\n            })}\n         </div>\n      </section>\n   );\n};\n\nexport default CocktailList;\n","import React, { useContext, useRef, useEffect } from 'react';\nimport { AppContext } from '../context';\n\nconst SearchForm = () => {\n   const { setSearchTerm } = useContext(AppContext);\n   const searchValue = useRef('');\n\n   //function to set focus on search input when component mounts & rerenders\n   useEffect(() => {\n      searchValue.current.focus();\n   }, []);\n\n   //function to prevent page refresh when the user press <enter> to submit the form\n   const handleSubmit = (e) => {\n      e.preventDefault();\n   };\n\n   //function to fetch and renders cocktails that suits the search criteria\n   const searchCocktail = () => {\n      setSearchTerm(searchValue.current.value);\n   };\n\n   return (\n      <section className='section search'>\n         <form className='search-form' onSubmit={handleSubmit}>\n            <div className='form-control'>\n               <label htmlFor='name'>search for favourite cocktail</label>\n               <input\n                  type='text'\n                  id='name'\n                  ref={searchValue}\n                  onChange={searchCocktail}\n               />\n            </div>\n         </form>\n      </section>\n   );\n};\n\nexport default SearchForm;\n\n/*\nwe make use of useRef here such that anytime the user type something in the input field, we invoke setSearchTerm which changes the value of searchTerm which triggers the fetchDrinks() function in the useEffect in context file.\n\n*/\n","import React from 'react';\nimport CocktailList from '../components/CocktailList';\nimport SearchForm from '../components/SearchForm';\n\nconst Home = () => {\n   return (\n      <main>\n         <SearchForm />\n         <CocktailList />\n      </main>\n   );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n   return (\n      <section className='section about-section'>\n         <h1 className='section-title'>about us</h1>\n         <p>\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dolores,\n            in culpa ducimus mollitia aliquid odit, voluptate enim,\n            exercitationem sit tempore rerum. Voluptatem consectetur cumque amet\n            aut est voluptate harum facere blanditiis inventore? Aliquid\n            similique consectetur eum dignissimos optio aliquam dolor vitae, ab\n            ipsa nulla, accusantium quam, molestias blanditiis fugiat fuga.\n         </p>\n      </section>\n   );\n};\n\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\n\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\n\nconst SingleCocktail = () => {\n   //getting the id of a cocktail that was clicked from the list of cocktails\n   const { id } = useParams();\n   const [loading, setLoading] = useState(false);\n   const [cocktail, setCocktail] = useState(null);\n\n   //setup useEffect such that everytime the component renders, it fetches info about the specific cocktail from the api\n   useEffect(() => {\n      setLoading(true);\n      async function getCocktail() {\n         try {\n            const response = await fetch(`${url}${id}`);\n            console.log(`${url}${id}`);\n            const data = await response.json();\n            console.log(data);\n            if (data.drinks) {\n               const {\n                  strDrink: name,\n                  strDrinkThumb: image,\n                  strAlcoholic: info,\n                  strCategory: category,\n                  strGlass: glass,\n                  strInstructions: instructions,\n                  strIngredient1,\n                  strIngredient2,\n                  strIngredient3,\n                  strIngredient4,\n                  strIngredient5,\n               } = data.drinks[0];\n\n               const ingredients = [\n                  strIngredient1,\n                  strIngredient2,\n                  strIngredient3,\n                  strIngredient4,\n                  strIngredient5,\n               ];\n\n               const newCocktail = {\n                  name,\n                  image,\n                  info,\n                  category,\n                  glass,\n                  instructions,\n                  ingredients,\n               };\n\n               setCocktail(newCocktail);\n            } else {\n               setCocktail(null);\n            }\n            setLoading(false);\n         } catch (error) {\n            console.log(error);\n            setLoading(false);\n         }\n      }\n      getCocktail();\n   }, [id]);\n\n   if (loading) {\n      return <Loading />;\n   }\n\n   if (!cocktail) {\n      return <h2 className='section-title'>no cocktail to display</h2>;\n   }\n\n   const { name, image, category, info, glass, instructions, ingredients } =\n      cocktail;\n   return (\n      <section className='section cocktail-section'>\n         <Link to='/' className='btn btn-primary'>\n            back home\n         </Link>\n         <h2 className='section-title'>{name}</h2>\n         <div className='drink'>\n            <img src={image} alt={name} />\n            <div className='drink-info'>\n               <p>\n                  <span className='drink-data'>name :</span> {name}\n               </p>\n               <p>\n                  <span className='drink-data'>category : </span> {category}\n               </p>\n               <p>\n                  <span className='drink-data'>info : </span> {info}\n               </p>\n               <p>\n                  <span className='drink-data'>glass :</span> {glass}\n               </p>\n               <p>\n                  <span className='drink-data'>instructions :</span>{' '}\n                  {instructions}\n               </p>\n               <p>\n                  <span className='drink-data'>ingredients :</span>{' '}\n                  {ingredients.map((ingredient, index) => {\n                     //check if the fetched ingredient is not null\n                     return ingredient ? (\n                        <span key={index}>{ingredient}</span>\n                     ) : null;\n                  })}\n               </p>\n            </div>\n         </div>\n      </section>\n   );\n};\n\nexport default SingleCocktail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Error = () => {\n   return (\n      <section className='error-page section'>\n         <div className='error-container'>\n            <h1>oops!...it's a dead end</h1>\n            <Link to='/' className='btn btn-primary'>\n               back home\n            </Link>\n         </div>\n      </section>\n   );\n};\n\nexport default Error;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.svg';\n\nconst Navbar = () => {\n   return (\n      <nav className='navbar'>\n         <div className='nav-center'>\n            <Link to='/'>\n               <img src={logo} alt='logo' className='logo' />\n            </Link>\n            <ul className='nav-links'>\n               <li>\n                  <Link to='/'>Home</Link>\n               </li>\n               <li>\n                  <Link to='/about'>About</Link>\n               </li>\n            </ul>\n         </div>\n      </nav>\n   );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n//import pages\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport SingleCocktail from './pages/SingleCocktail';\nimport Error from './pages/Error';\n//import components\nimport Navbar from './components/Navbar';\n\nfunction App() {\n   return (\n      <Router>\n         <Navbar />\n         <Switch>\n            <Route exact path='/'>\n               <Home />\n            </Route>\n            <Route path='/about'>\n               <About />\n            </Route>\n            <Route path='/cocktail/:id'>\n               <SingleCocktail />\n            </Route>\n            <Route path='*'>\n               <Error />\n            </Route>\n         </Switch>\n      </Router>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\n\nReactDOM.render(\n   <React.StrictMode>\n      <AppProvider>\n         <App />\n      </AppProvider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}